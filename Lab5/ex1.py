# -*- coding: utf-8 -*-
"""ex1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yOsknkAAjA40AXhSDs5IOR87zLcyd6dc

#Task 1 :Try Linear Regression just using numpy (Without Tensorflow/Pytorch or other torch library).
"""

import numpy as np
from sklearn.linear_model import LinearRegression

inputs = np.array([[73, 67, 43],
                    [91, 88, 64],
                    [87, 134, 58],
                    [102, 43, 37],
                    [69, 96, 70],
                    [73, 67, 43],
                    [91, 88, 64],
                    [87, 134, 58],
                    [102, 43, 37],
                    [69, 96, 70],
                    [73, 67, 43], 
                    [91, 88, 64], 
                    [87, 134, 58], 
                    [102, 43, 37], 
                    [69, 96, 70]], dtype='float32')
print(inputs.shape)

targets = np.array([[56, 70], [81, 101], [119, 133], [22, 37], [103, 119],
[56, 70], [81, 101], [119, 133], [22, 37], [103, 119],
[56, 70], [81, 101], [119, 133], [22, 37], [103, 119]], dtype='float32')

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(inputs,targets,test_size=0.3, random_state=89)

reg = LinearRegression().fit(x_train,y_train)
print(reg)

print(reg.intercept_)
print(reg.coef_)

y_pred = reg.predict(x_test)
print(y_pred,"\n")
print(y_test)

from sklearn import metrics
print('\n Mean Squared Error:', metrics.mean_squared_error(y_test, y_pred))